<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itqf.mapper.DqActivitiesMapper" >
  <resultMap id="BaseResultMap" type="com.itqf.pojo.DqActivities" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="entity_id" property="entityId" jdbcType="INTEGER" />
    <result column="organiger_id" property="organigerId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_at" property="startAt" jdbcType="TIMESTAMP" />
    <result column="finish_at" property="finishAt" jdbcType="TIMESTAMP" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="gather_at" property="gatherAt" jdbcType="VARCHAR" />
    <result column="public_level" property="publicLevel" jdbcType="VARCHAR" />
    <result column="is_limit" property="isLimit" jdbcType="TINYINT" />
    <result column="max_participant" property="maxParticipant" jdbcType="INTEGER" />
    <result column="min_participant" property="minParticipant" jdbcType="INTEGER" />
    <result column="is_auto_cancel" property="isAutoCancel" jdbcType="TINYINT" />
    <result column="is_auto_approve" property="isAutoApprove" jdbcType="TINYINT" />
    <result column="deadline" property="deadline" jdbcType="TIMESTAMP" />
    <result column="charge_mode" property="chargeMode" jdbcType="TINYINT" />
    <result column="charge_perp" property="chargePerp" jdbcType="REAL" />
    <result column="max_charge_perp" property="maxChargePerp" jdbcType="REAL" />
    <result column="min_charge_perp" property="minChargePerp" jdbcType="REAL" />
    <result column="charge_perph" property="chargePerph" jdbcType="REAL" />
    <result column="charge_total" property="chargeTotal" jdbcType="REAL" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="follow_count" property="followCount" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.itqf.pojo.DqActivities" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, entity_id, organiger_id, name, type, status, start_at, finish_at, location, gather_at, 
    public_level, is_limit, max_participant, min_participant, is_auto_cancel, is_auto_approve, 
    deadline, charge_mode, charge_perp, max_charge_perp, min_charge_perp, charge_perph, 
    charge_total, pay_type, follow_count, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.itqf.pojo.DqActivitiesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dq_activities
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itqf.pojo.DqActivitiesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dq_activities
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dq_activities
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dq_activities
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itqf.pojo.DqActivitiesExample" >
    delete from dq_activities
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itqf.pojo.DqActivities" >
    insert into dq_activities (id, entity_id, organiger_id, 
      name, type, status, 
      start_at, finish_at, location, 
      gather_at, public_level, is_limit, 
      max_participant, min_participant, is_auto_cancel, 
      is_auto_approve, deadline, charge_mode, 
      charge_perp, max_charge_perp, min_charge_perp, 
      charge_perph, charge_total, pay_type, 
      follow_count, created_at, updated_at, 
      description)
    values (#{id,jdbcType=INTEGER}, #{entityId,jdbcType=INTEGER}, #{organigerId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{startAt,jdbcType=TIMESTAMP}, #{finishAt,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, 
      #{gatherAt,jdbcType=VARCHAR}, #{publicLevel,jdbcType=VARCHAR}, #{isLimit,jdbcType=TINYINT}, 
      #{maxParticipant,jdbcType=INTEGER}, #{minParticipant,jdbcType=INTEGER}, #{isAutoCancel,jdbcType=TINYINT}, 
      #{isAutoApprove,jdbcType=TINYINT}, #{deadline,jdbcType=TIMESTAMP}, #{chargeMode,jdbcType=TINYINT}, 
      #{chargePerp,jdbcType=REAL}, #{maxChargePerp,jdbcType=REAL}, #{minChargePerp,jdbcType=REAL}, 
      #{chargePerph,jdbcType=REAL}, #{chargeTotal,jdbcType=REAL}, #{payType,jdbcType=INTEGER}, 
      #{followCount,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.itqf.pojo.DqActivities" >
    insert into dq_activities
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="entityId != null" >
        entity_id,
      </if>
      <if test="organigerId != null" >
        organiger_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="startAt != null" >
        start_at,
      </if>
      <if test="finishAt != null" >
        finish_at,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="gatherAt != null" >
        gather_at,
      </if>
      <if test="publicLevel != null" >
        public_level,
      </if>
      <if test="isLimit != null" >
        is_limit,
      </if>
      <if test="maxParticipant != null" >
        max_participant,
      </if>
      <if test="minParticipant != null" >
        min_participant,
      </if>
      <if test="isAutoCancel != null" >
        is_auto_cancel,
      </if>
      <if test="isAutoApprove != null" >
        is_auto_approve,
      </if>
      <if test="deadline != null" >
        deadline,
      </if>
      <if test="chargeMode != null" >
        charge_mode,
      </if>
      <if test="chargePerp != null" >
        charge_perp,
      </if>
      <if test="maxChargePerp != null" >
        max_charge_perp,
      </if>
      <if test="minChargePerp != null" >
        min_charge_perp,
      </if>
      <if test="chargePerph != null" >
        charge_perph,
      </if>
      <if test="chargeTotal != null" >
        charge_total,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="followCount != null" >
        follow_count,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="entityId != null" >
        #{entityId,jdbcType=INTEGER},
      </if>
      <if test="organigerId != null" >
        #{organigerId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="startAt != null" >
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null" >
        #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="gatherAt != null" >
        #{gatherAt,jdbcType=VARCHAR},
      </if>
      <if test="publicLevel != null" >
        #{publicLevel,jdbcType=VARCHAR},
      </if>
      <if test="isLimit != null" >
        #{isLimit,jdbcType=TINYINT},
      </if>
      <if test="maxParticipant != null" >
        #{maxParticipant,jdbcType=INTEGER},
      </if>
      <if test="minParticipant != null" >
        #{minParticipant,jdbcType=INTEGER},
      </if>
      <if test="isAutoCancel != null" >
        #{isAutoCancel,jdbcType=TINYINT},
      </if>
      <if test="isAutoApprove != null" >
        #{isAutoApprove,jdbcType=TINYINT},
      </if>
      <if test="deadline != null" >
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeMode != null" >
        #{chargeMode,jdbcType=TINYINT},
      </if>
      <if test="chargePerp != null" >
        #{chargePerp,jdbcType=REAL},
      </if>
      <if test="maxChargePerp != null" >
        #{maxChargePerp,jdbcType=REAL},
      </if>
      <if test="minChargePerp != null" >
        #{minChargePerp,jdbcType=REAL},
      </if>
      <if test="chargePerph != null" >
        #{chargePerph,jdbcType=REAL},
      </if>
      <if test="chargeTotal != null" >
        #{chargeTotal,jdbcType=REAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        #{followCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itqf.pojo.DqActivitiesExample" resultType="java.lang.Integer" >
    select count(*) from dq_activities
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dq_activities
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.entityId != null" >
        entity_id = #{record.entityId,jdbcType=INTEGER},
      </if>
      <if test="record.organigerId != null" >
        organiger_id = #{record.organigerId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.startAt != null" >
        start_at = #{record.startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishAt != null" >
        finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null" >
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.gatherAt != null" >
        gather_at = #{record.gatherAt,jdbcType=VARCHAR},
      </if>
      <if test="record.publicLevel != null" >
        public_level = #{record.publicLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.isLimit != null" >
        is_limit = #{record.isLimit,jdbcType=TINYINT},
      </if>
      <if test="record.maxParticipant != null" >
        max_participant = #{record.maxParticipant,jdbcType=INTEGER},
      </if>
      <if test="record.minParticipant != null" >
        min_participant = #{record.minParticipant,jdbcType=INTEGER},
      </if>
      <if test="record.isAutoCancel != null" >
        is_auto_cancel = #{record.isAutoCancel,jdbcType=TINYINT},
      </if>
      <if test="record.isAutoApprove != null" >
        is_auto_approve = #{record.isAutoApprove,jdbcType=TINYINT},
      </if>
      <if test="record.deadline != null" >
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chargeMode != null" >
        charge_mode = #{record.chargeMode,jdbcType=TINYINT},
      </if>
      <if test="record.chargePerp != null" >
        charge_perp = #{record.chargePerp,jdbcType=REAL},
      </if>
      <if test="record.maxChargePerp != null" >
        max_charge_perp = #{record.maxChargePerp,jdbcType=REAL},
      </if>
      <if test="record.minChargePerp != null" >
        min_charge_perp = #{record.minChargePerp,jdbcType=REAL},
      </if>
      <if test="record.chargePerph != null" >
        charge_perph = #{record.chargePerph,jdbcType=REAL},
      </if>
      <if test="record.chargeTotal != null" >
        charge_total = #{record.chargeTotal,jdbcType=REAL},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.followCount != null" >
        follow_count = #{record.followCount,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update dq_activities
    set id = #{record.id,jdbcType=INTEGER},
      entity_id = #{record.entityId,jdbcType=INTEGER},
      organiger_id = #{record.organigerId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      start_at = #{record.startAt,jdbcType=TIMESTAMP},
      finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      gather_at = #{record.gatherAt,jdbcType=VARCHAR},
      public_level = #{record.publicLevel,jdbcType=VARCHAR},
      is_limit = #{record.isLimit,jdbcType=TINYINT},
      max_participant = #{record.maxParticipant,jdbcType=INTEGER},
      min_participant = #{record.minParticipant,jdbcType=INTEGER},
      is_auto_cancel = #{record.isAutoCancel,jdbcType=TINYINT},
      is_auto_approve = #{record.isAutoApprove,jdbcType=TINYINT},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      charge_mode = #{record.chargeMode,jdbcType=TINYINT},
      charge_perp = #{record.chargePerp,jdbcType=REAL},
      max_charge_perp = #{record.maxChargePerp,jdbcType=REAL},
      min_charge_perp = #{record.minChargePerp,jdbcType=REAL},
      charge_perph = #{record.chargePerph,jdbcType=REAL},
      charge_total = #{record.chargeTotal,jdbcType=REAL},
      pay_type = #{record.payType,jdbcType=INTEGER},
      follow_count = #{record.followCount,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dq_activities
    set id = #{record.id,jdbcType=INTEGER},
      entity_id = #{record.entityId,jdbcType=INTEGER},
      organiger_id = #{record.organigerId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      start_at = #{record.startAt,jdbcType=TIMESTAMP},
      finish_at = #{record.finishAt,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      gather_at = #{record.gatherAt,jdbcType=VARCHAR},
      public_level = #{record.publicLevel,jdbcType=VARCHAR},
      is_limit = #{record.isLimit,jdbcType=TINYINT},
      max_participant = #{record.maxParticipant,jdbcType=INTEGER},
      min_participant = #{record.minParticipant,jdbcType=INTEGER},
      is_auto_cancel = #{record.isAutoCancel,jdbcType=TINYINT},
      is_auto_approve = #{record.isAutoApprove,jdbcType=TINYINT},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      charge_mode = #{record.chargeMode,jdbcType=TINYINT},
      charge_perp = #{record.chargePerp,jdbcType=REAL},
      max_charge_perp = #{record.maxChargePerp,jdbcType=REAL},
      min_charge_perp = #{record.minChargePerp,jdbcType=REAL},
      charge_perph = #{record.chargePerph,jdbcType=REAL},
      charge_total = #{record.chargeTotal,jdbcType=REAL},
      pay_type = #{record.payType,jdbcType=INTEGER},
      follow_count = #{record.followCount,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itqf.pojo.DqActivities" >
    update dq_activities
    <set >
      <if test="entityId != null" >
        entity_id = #{entityId,jdbcType=INTEGER},
      </if>
      <if test="organigerId != null" >
        organiger_id = #{organigerId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="startAt != null" >
        start_at = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="finishAt != null" >
        finish_at = #{finishAt,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="gatherAt != null" >
        gather_at = #{gatherAt,jdbcType=VARCHAR},
      </if>
      <if test="publicLevel != null" >
        public_level = #{publicLevel,jdbcType=VARCHAR},
      </if>
      <if test="isLimit != null" >
        is_limit = #{isLimit,jdbcType=TINYINT},
      </if>
      <if test="maxParticipant != null" >
        max_participant = #{maxParticipant,jdbcType=INTEGER},
      </if>
      <if test="minParticipant != null" >
        min_participant = #{minParticipant,jdbcType=INTEGER},
      </if>
      <if test="isAutoCancel != null" >
        is_auto_cancel = #{isAutoCancel,jdbcType=TINYINT},
      </if>
      <if test="isAutoApprove != null" >
        is_auto_approve = #{isAutoApprove,jdbcType=TINYINT},
      </if>
      <if test="deadline != null" >
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeMode != null" >
        charge_mode = #{chargeMode,jdbcType=TINYINT},
      </if>
      <if test="chargePerp != null" >
        charge_perp = #{chargePerp,jdbcType=REAL},
      </if>
      <if test="maxChargePerp != null" >
        max_charge_perp = #{maxChargePerp,jdbcType=REAL},
      </if>
      <if test="minChargePerp != null" >
        min_charge_perp = #{minChargePerp,jdbcType=REAL},
      </if>
      <if test="chargePerph != null" >
        charge_perph = #{chargePerph,jdbcType=REAL},
      </if>
      <if test="chargeTotal != null" >
        charge_total = #{chargeTotal,jdbcType=REAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="followCount != null" >
        follow_count = #{followCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.itqf.pojo.DqActivities" >
    update dq_activities
    set entity_id = #{entityId,jdbcType=INTEGER},
      organiger_id = #{organigerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      finish_at = #{finishAt,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      gather_at = #{gatherAt,jdbcType=VARCHAR},
      public_level = #{publicLevel,jdbcType=VARCHAR},
      is_limit = #{isLimit,jdbcType=TINYINT},
      max_participant = #{maxParticipant,jdbcType=INTEGER},
      min_participant = #{minParticipant,jdbcType=INTEGER},
      is_auto_cancel = #{isAutoCancel,jdbcType=TINYINT},
      is_auto_approve = #{isAutoApprove,jdbcType=TINYINT},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      charge_mode = #{chargeMode,jdbcType=TINYINT},
      charge_perp = #{chargePerp,jdbcType=REAL},
      max_charge_perp = #{maxChargePerp,jdbcType=REAL},
      min_charge_perp = #{minChargePerp,jdbcType=REAL},
      charge_perph = #{chargePerph,jdbcType=REAL},
      charge_total = #{chargeTotal,jdbcType=REAL},
      pay_type = #{payType,jdbcType=INTEGER},
      follow_count = #{followCount,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itqf.pojo.DqActivities" >
    update dq_activities
    set entity_id = #{entityId,jdbcType=INTEGER},
      organiger_id = #{organigerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      finish_at = #{finishAt,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      gather_at = #{gatherAt,jdbcType=VARCHAR},
      public_level = #{publicLevel,jdbcType=VARCHAR},
      is_limit = #{isLimit,jdbcType=TINYINT},
      max_participant = #{maxParticipant,jdbcType=INTEGER},
      min_participant = #{minParticipant,jdbcType=INTEGER},
      is_auto_cancel = #{isAutoCancel,jdbcType=TINYINT},
      is_auto_approve = #{isAutoApprove,jdbcType=TINYINT},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      charge_mode = #{chargeMode,jdbcType=TINYINT},
      charge_perp = #{chargePerp,jdbcType=REAL},
      max_charge_perp = #{maxChargePerp,jdbcType=REAL},
      min_charge_perp = #{minChargePerp,jdbcType=REAL},
      charge_perph = #{chargePerph,jdbcType=REAL},
      charge_total = #{chargeTotal,jdbcType=REAL},
      pay_type = #{payType,jdbcType=INTEGER},
      follow_count = #{followCount,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>