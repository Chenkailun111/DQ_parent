<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itqf.mapper.DqAccountDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.itqf.pojo.DqAccountDetails" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="transaction_type" property="transactionType" jdbcType="VARCHAR" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="outgo" property="outgo" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account_id, transaction_type, income, outgo, balance, memo, created_at, updated_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.itqf.pojo.DqAccountDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dq_account_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dq_account_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dq_account_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.itqf.pojo.DqAccountDetailsExample" >
    delete from dq_account_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.itqf.pojo.DqAccountDetails" >
    insert into dq_account_details (id, account_id, transaction_type, 
      income, outgo, balance, 
      memo, created_at, updated_at
      )
    values (#{id,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{transactionType,jdbcType=VARCHAR}, 
      #{income,jdbcType=DECIMAL}, #{outgo,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, 
      #{memo,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.itqf.pojo.DqAccountDetails" >
    insert into dq_account_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="transactionType != null" >
        transaction_type,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="outgo != null" >
        outgo,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="transactionType != null" >
        #{transactionType,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="outgo != null" >
        #{outgo,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.itqf.pojo.DqAccountDetailsExample" resultType="java.lang.Integer" >
    select count(*) from dq_account_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dq_account_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null" >
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.transactionType != null" >
        transaction_type = #{record.transactionType,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=DECIMAL},
      </if>
      <if test="record.outgo != null" >
        outgo = #{record.outgo,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dq_account_details
    set id = #{record.id,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      transaction_type = #{record.transactionType,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=DECIMAL},
      outgo = #{record.outgo,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      memo = #{record.memo,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.itqf.pojo.DqAccountDetails" >
    update dq_account_details
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="transactionType != null" >
        transaction_type = #{transactionType,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="outgo != null" >
        outgo = #{outgo,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itqf.pojo.DqAccountDetails" >
    update dq_account_details
    set account_id = #{accountId,jdbcType=INTEGER},
      transaction_type = #{transactionType,jdbcType=VARCHAR},
      income = #{income,jdbcType=DECIMAL},
      outgo = #{outgo,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      memo = #{memo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>